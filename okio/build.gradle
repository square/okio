apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
  targets {
    fromPreset(presets.jvm, 'jvm')
    fromPreset(presets.js, 'js') {
      configure([compilations.main, compilations.test]) {
        tasks.getByName(compileKotlinTaskName).kotlinOptions {
          moduleKind = "commonjs"
        }
      }
    }
    fromPreset(presets.iosX64, 'iosX64') {
      compilations.main.outputKinds 'framework'
    }
    fromPreset(presets.iosArm64, 'iosArm64') {
      compilations.main.outputKinds 'framework'
    }
  }
  sourceSets {
    commonMain {
      kotlin.srcDir('src/main/kotlin')
      dependencies {
        implementation deps.kotlin.stdLib.common
      }
    }
    commonTest {
      kotlin.srcDir('src/test/kotlin')
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.annotations
      }
    }
    jvmMain {
      kotlin.srcDir('jvm/src/main/java')
      dependsOn commonMain
      dependencies {
        implementation deps.kotlin.stdLib.jdk6
        compileOnly deps.animalSniffer.annotations
      }
    }
    jvmTest {
      kotlin.srcDir('jvm/src/test/java')
      dependsOn commonTest
      dependencies {
        implementation deps.test.junit
        implementation deps.test.assertj
        implementation deps.kotlin.test.jdk
      }
    }
    jsMain {
      kotlin.srcDir('js/src/main/kotlin')
      dependsOn commonMain
      dependencies {
        implementation deps.kotlin.stdLib.js
      }
    }
    jsTest {
      kotlin.srcDir('js/src/test/kotlin')
      dependsOn commonTest
      dependencies {
        implementation deps.kotlin.test.js
      }
    }
    nativeMain {
      kotlin.srcDir('native/src/main/kotlin')
      dependsOn commonMain
    }
    nativeTest {
      kotlin.srcDir('native/src/test/kotlin')
      dependsOn commonTest
    }
  }
  configure([targets.iosX64, targets.iosArm64]) {
    compilations.main.source(sourceSets.nativeMain)
    compilations.test.source(sourceSets.nativeTest)
  }
}

apply from: 'js/build.gradle'
