/*
 * Copyright (C) 2018 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.moowork.node'

node {
  download = true
}

task installMocha(type: NpmTask) {
  args = ['install', 'mocha']
}

kotlin.targets.matching { it.platformType.name == 'js' }.all { target ->
  def testCompilation = target.compilations["test"]
  def mainCompilation = target.compilations["main"]
  def targetName = target.name

  def testCompilationTask = tasks[testCompilation.compileKotlinTaskName]
  def mainCompilationTask = tasks[mainCompilation.compileKotlinTaskName]

  def populateNodeModules = task populateNodeModules(type: Copy, dependsOn: mainCompilationTask) {
    from mainCompilationTask.destinationDir
    into "$node.nodeModulesDir/node_modules"

    def configuration = testCompilation.runtimeDependencyFiles
    from(files {
      configuration.collect { File file ->
        file.name.endsWith(".jar") ?
                zipTree(file.absolutePath).matching {
                  include '*.js'
                } :
                files()
      }
    }.builtBy(configuration))
  }

  task runMocha(type: NodeTask, dependsOn: [testCompilationTask, populateNodeModules, installMocha]) {
    script = file("$node.nodeModulesDir/node_modules/mocha/bin/mocha")
    args = [testCompilationTask.outputFile]
  }
  tasks["${targetName}Test"].dependsOn runMocha
}
