import com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer
import com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer

apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.platform.jvm'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'me.champeau.gradle.japicmp'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

jar {
  manifest {
    attributes('Automatic-Module-Name': 'okio')
  }
}

animalsniffer {
  sourceSets = [sourceSets.main]
}

configurations {
  baseline
}

jmhJar {
  def excludeAllBenchmarkLists = new DontIncludeResourceTransformer()
  excludeAllBenchmarkLists.resource = "META-INF/BenchmarkList"
  transform(excludeAllBenchmarkLists)

  def includeCorrectBenchmarkList = new IncludeResourceTransformer()
  includeCorrectBenchmarkList.resource = "META-INF/BenchmarkList"
  includeCorrectBenchmarkList.file = new File("$rootDir/okio/jvm/build/classes/java/jmh/META-INF/BenchmarkList")
  transform(includeCorrectBenchmarkList)
}

jmh {
  // The JMH plugin currently requires the Shadow plugin also be installed.
  // See: https://github.com/melix/jmh-gradle-plugin/issues/97#issuecomment-374866151
  include = ['com\\.squareup\\.okio\\.benchmarks\\.SelectBenchmark.*']
  duplicateClassesStrategy = 'warn'
}

dependencies {
  signature 'org.codehaus.mojo.signature:java16:1.1@signature'

  expectedBy project(':okio')

  implementation deps.kotlin.stdLib.jdk6
  compileOnly deps.animalSniffer.annotations
  testImplementation deps.test.junit
  testImplementation deps.test.assertj
  testImplementation deps.kotlin.test.jdk

  baseline('com.squareup.okio:okio:1.14.1') {
    transitive = false
    force = true
  }

  jmh deps.kotlin.stdLib.jdk6
  jmh deps.jmh.core
  jmh deps.jmh.generator
}

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask, dependsOn: 'jar') {
  oldClasspath = configurations.baseline
  newClasspath = files(jar.archivePath)
  onlyBinaryIncompatibleModified = true
  failOnModification = true
  txtOutputFile = file("$buildDir/reports/japi.txt")
  ignoreMissingClasses = true
  includeSynthetic = true
  classExcludes = [
      'okio.SegmentedByteString', // Internal.
      'okio.Util', // Internal.
  ]
  methodExcludes = [
      'okio.ByteString#getByte(int)', // Became 'final' in 1.15.0.
      'okio.ByteString#size()', // Became 'final' in 1.15.0.
  ]
  fieldExcludes = [
      'okio.RealBufferedSink#buffer', // Became 'bufferField' in 2.1.0.
      'okio.RealBufferedSource#buffer', // Became 'bufferField' in 2.1.0.
  ]
}
check.dependsOn(japicmp)

assemble.dependsOn(tasks['jmhJar'])

dokka {
  skipDeprecated = true

  packageOptions {
    prefix = "com.squareup"
    suppress = true
  }
}
