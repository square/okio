import com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer
import com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer

apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.platform.jvm'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'me.champeau.gradle.jmh'

shadowJar {
  manifest.attributes('Main-Class': 'org.openjdk.jmh.Main')
  
  def excludeAllBenchmarkLists = new DontIncludeResourceTransformer()
  excludeAllBenchmarkLists.resource = "META-INF/BenchmarkList"
  transform(excludeAllBenchmarkLists)

  def includeCorrectBenchmarkList = new IncludeResourceTransformer()
  includeCorrectBenchmarkList.resource = "META-INF/BenchmarkList"
  includeCorrectBenchmarkList.file = new File("${project.buildDir}/jmh-generated-resources/META-INF/BenchmarkList")
  transform(includeCorrectBenchmarkList)

  def includeCompilerHints = new IncludeResourceTransformer()
  includeCompilerHints.resource = "META-INF/CompilerHints"
  includeCompilerHints.file = new File("${project.buildDir}/jmh-generated-resources/META-INF/CompilerHints")
  transform(includeCompilerHints)
}

jmh {
  // The JMH plugin currently requires the Shadow plugin also be installed.
  // See: https://github.com/melix/jmh-gradle-plugin/issues/97#issuecomment-374866151
  include = ['com\\.squareup\\.okio\\.benchmarks\\.SelectBenchmark.*']
  duplicateClassesStrategy = 'warn'
}

dependencies {
  implementation deps.jmh.core
  jmh project(path: ':okio', configuration: 'runtimeElements')
  jmh deps.kotlin.stdLib.jdk6
  jmh deps.jmh.core
  jmh deps.jmh.generator
}

shadowJar.dependsOn(tasks['jmhJar'])
